include\/cuda\/experimental\/\_\_graph\/graph\_node\_type.cuh
=============================================================

File members: :ref:`include\/cuda\/experimental\/\_\_graph\/graph\_node\_type.cuh <graph__node__type_8cuh>`

.. code-block:: c++

   //===----------------------------------------------------------------------===//
   //
   // Part of CUDA Experimental in CUDA C++ Core Libraries,
   // under the Apache License v2.0 with LLVM Exceptions.
   // See https://llvm.org/LICENSE.txt for license information.
   // SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
   // SPDX-FileCopyrightText: Copyright (c) 2025 NVIDIA CORPORATION & AFFILIATES.
   //
   //===----------------------------------------------------------------------===//

   #ifndef __CUDAX_GRAPH_GRAPH_NODE_TYPE
   #define __CUDAX_GRAPH_GRAPH_NODE_TYPE

   #include <cuda/std/detail/__config>

   #if defined(_CCCL_IMPLICIT_SYSTEM_HEADER_GCC)
   #  pragma GCC system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_CLANG)
   #  pragma clang system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_MSVC)
   #  pragma system_header
   #endif // no system header

   #include <cuda_runtime_api.h>

   #include <cuda/std/__cccl/prologue.h>

   namespace cuda::experimental
   {
   enum class graph_node_type : int
   {
     kernel           = cudaGraphNodeTypeKernel,
     memcpy           = cudaGraphNodeTypeMemcpy,
     memset           = cudaGraphNodeTypeMemset,
     host             = cudaGraphNodeTypeHost,
     graph            = cudaGraphNodeTypeGraph,
     empty            = cudaGraphNodeTypeEmpty,
     wait_event       = cudaGraphNodeTypeWaitEvent,
     event_record     = cudaGraphNodeTypeEventRecord,
     semaphore_signal = cudaGraphNodeTypeExtSemaphoreSignal,
     semaphore_wait   = cudaGraphNodeTypeExtSemaphoreWait,
     malloc           = cudaGraphNodeTypeMemAlloc,
     free             = cudaGraphNodeTypeMemFree,
   // batch_memop      = CU_GRAPH_NODE_TYPE_BATCH_MEM_OP, // not exposed by the CUDA runtime

   #if _CCCL_CUDACC_AT_LEAST(12, 8)
     conditional = cudaGraphNodeTypeConditional
   #endif
   };

   } // namespace cuda::experimental

   #include <cuda/std/__cccl/epilogue.h>

   #endif // __CUDAX_GRAPH_GRAPH_NODE_TYPE

