thrust\/shuffle.h
=================

File members: :ref:`thrust\/shuffle.h <shuffle_8h>`

.. code-block:: c++

   /*
    *  Copyright 2008-2020 NVIDIA Corporation
    *
    *  Licensed under the Apache License, Version 2.0 (the "License");
    *  you may not use this file except in compliance with the License.
    *  You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    *  Unless required by applicable law or agreed to in writing, software
    *  distributed under the License is distributed on an "AS IS" BASIS,
    *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    *  See the License for the specific language governing permissions and
    *  limitations under the License.
    */

   #pragma once

   #include <thrust/detail/config.h>

   #if defined(_CCCL_IMPLICIT_SYSTEM_HEADER_GCC)
   #  pragma GCC system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_CLANG)
   #  pragma clang system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_MSVC)
   #  pragma system_header
   #endif // no system header

   #include <thrust/detail/execution_policy.h>

   THRUST_NAMESPACE_BEGIN

   template <typename DerivedPolicy, typename RandomIterator, typename URBG>
   _CCCL_HOST_DEVICE void shuffle(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec, RandomIterator first, RandomIterator last, URBG&& g);

   template <typename RandomIterator, typename URBG>
   _CCCL_HOST_DEVICE void shuffle(RandomIterator first, RandomIterator last, URBG&& g);

   template <typename DerivedPolicy, typename RandomIterator, typename OutputIterator, typename URBG>
   _CCCL_HOST_DEVICE void shuffle_copy(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     RandomIterator first,
     RandomIterator last,
     OutputIterator result,
     URBG&& g);

   template <typename RandomIterator, typename OutputIterator, typename URBG>
   _CCCL_HOST_DEVICE void shuffle_copy(RandomIterator first, RandomIterator last, OutputIterator result, URBG&& g);

   THRUST_NAMESPACE_END

   #include <thrust/detail/shuffle.inl>

