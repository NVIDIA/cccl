thrust\/execution\_policy.h
===========================

File members: :ref:`thrust\/execution\_policy.h <execution__policy_8h>`

.. code-block:: c++

   /*
    *  Copyright 2008-2013 NVIDIA Corporation
    *
    *  Licensed under the Apache License, Version 2.0 (the "License");
    *  you may not use this file except in compliance with the License.
    *  You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    *  Unless required by applicable law or agreed to in writing, software
    *  distributed under the License is distributed on an "AS IS" BASIS,
    *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    *  See the License for the specific language governing permissions and
    *  limitations under the License.
    */

   #pragma once

   #include <thrust/detail/config.h>

   #if defined(_CCCL_IMPLICIT_SYSTEM_HEADER_GCC)
   #  pragma GCC system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_CLANG)
   #  pragma clang system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_MSVC)
   #  pragma system_header
   #endif // no system header
   #include <thrust/detail/execute_with_allocator.h>
   #include <thrust/detail/execution_policy.h>
   #include <thrust/detail/seq.h>

   // #include the host system's execution_policy header
   #define __THRUST_HOST_SYSTEM_EXECUTION_POLICY_HEADER <__THRUST_HOST_SYSTEM_ROOT/execution_policy.h>
   #include __THRUST_HOST_SYSTEM_EXECUTION_POLICY_HEADER
   #undef __THRUST_HOST_SYSTEM_EXECUTION_POLICY_HEADER

   // #include the device system's execution_policy.h header
   #define __THRUST_DEVICE_SYSTEM_EXECUTION_POLICY_HEADER <__THRUST_DEVICE_SYSTEM_ROOT/execution_policy.h>
   #include __THRUST_DEVICE_SYSTEM_EXECUTION_POLICY_HEADER
   #undef __THRUST_DEVICE_SYSTEM_EXECUTION_POLICY_HEADER

   THRUST_NAMESPACE_BEGIN

   namespace detail
   {

   using host_t = thrust::system::__THRUST_HOST_SYSTEM_NAMESPACE::detail::par_t;

   using device_t = thrust::system::__THRUST_DEVICE_SYSTEM_NAMESPACE::detail::par_t;

   } // namespace detail

   // define execution_policy for the purpose of Doxygenating it
   // it is actually defined elsewhere
   #if _CCCL_DOXYGEN_INVOKED

   template <typename DerivedPolicy>
   struct execution_policy : thrust::detail::execution_policy_base<DerivedPolicy>
   {};
   #endif

   template <typename DerivedPolicy>
   struct host_execution_policy : thrust::system::__THRUST_HOST_SYSTEM_NAMESPACE::execution_policy<DerivedPolicy>
   {};

   template <typename DerivedPolicy>
   struct device_execution_policy : thrust::system::__THRUST_DEVICE_SYSTEM_NAMESPACE::execution_policy<DerivedPolicy>
   {};

   static const detail::host_t host;

   _CCCL_GLOBAL_CONSTANT detail::device_t device;

   // define seq for the purpose of Doxygenating it
   // it is actually defined elsewhere
   #if _CCCL_DOXYGEN_INVOKED

   static const detail::seq_t seq;
   #endif

   THRUST_NAMESPACE_END

