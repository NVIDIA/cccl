thrust\/system\/tbb\/pointer.h
==============================

File members: :ref:`thrust\/system\/tbb\/pointer.h <system_2tbb_2pointer_8h>`

.. code-block:: c++

   /*
    *  Copyright 2008-2020 NVIDIA Corporation
    *
    *  Licensed under the Apache License, Version 2.0 (the "License");
    *  you may not use this file except in compliance with the License.
    *  You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    *  Unless required by applicable law or agreed to in writing, software
    *  distributed under the License is distributed on an "AS IS" BASIS,
    *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    *  See the License for the specific language governing permissions and
    *  limitations under the License.
    */

   #pragma once

   #include <thrust/detail/config.h>

   #if defined(_CCCL_IMPLICIT_SYSTEM_HEADER_GCC)
   #  pragma GCC system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_CLANG)
   #  pragma clang system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_MSVC)
   #  pragma system_header
   #endif // no system header
   #include <thrust/detail/pointer.h>
   #include <thrust/detail/reference.h>
   #include <thrust/system/tbb/detail/execution_policy.h>

   #include <cuda/std/type_traits>

   THRUST_NAMESPACE_BEGIN
   namespace system
   {
   namespace tbb
   {

   template <typename T>
   using pointer = thrust::pointer<T, thrust::system::tbb::tag, thrust::tagged_reference<T, thrust::system::tbb::tag>>;

   template <typename T>
   using universal_pointer = thrust::pointer<T, thrust::system::tbb::tag, ::cuda::std::add_lvalue_reference_t<T>>;

   template <typename T>
   using universal_host_pinned_pointer = universal_pointer<T>;

   template <typename T>
   using reference = thrust::tagged_reference<T, thrust::system::tbb::tag>;

   } // namespace tbb
   } // namespace system

   namespace tbb
   {
   using thrust::system::tbb::pointer;
   using thrust::system::tbb::reference;
   using thrust::system::tbb::universal_host_pinned_pointer;
   using thrust::system::tbb::universal_pointer;
   } // namespace tbb

   THRUST_NAMESPACE_END

