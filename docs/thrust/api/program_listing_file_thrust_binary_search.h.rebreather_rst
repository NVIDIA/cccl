thrust\/binary\_search.h
========================

File members: :ref:`thrust\/binary\_search.h <binary__search_8h>`

.. code-block:: c++

   /*
    *  Copyright 2008-2013 NVIDIA Corporation
    *
    *  Licensed under the Apache License, Version 2.0 (the "License");
    *  you may not use this file except in compliance with the License.
    *  You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    *  Unless required by applicable law or agreed to in writing, software
    *  distributed under the License is distributed on an "AS IS" BASIS,
    *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    *  See the License for the specific language governing permissions and
    *  limitations under the License.
    */

   #pragma once

   #include <thrust/detail/config.h>

   #if defined(_CCCL_IMPLICIT_SYSTEM_HEADER_GCC)
   #  pragma GCC system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_CLANG)
   #  pragma clang system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_MSVC)
   #  pragma system_header
   #endif // no system header
   #include <thrust/detail/execution_policy.h>
   #include <thrust/pair.h>

   THRUST_NAMESPACE_BEGIN

   // Scalar Functions //

   template <typename DerivedPolicy, typename ForwardIterator, typename LessThanComparable>
   _CCCL_HOST_DEVICE ForwardIterator lower_bound(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     const LessThanComparable& value);

   template <class ForwardIterator, class LessThanComparable>
   ForwardIterator lower_bound(ForwardIterator first, ForwardIterator last, const LessThanComparable& value);

   template <typename DerivedPolicy, typename ForwardIterator, typename T, typename StrictWeakOrdering>
   _CCCL_HOST_DEVICE ForwardIterator lower_bound(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     const T& value,
     StrictWeakOrdering comp);

   template <class ForwardIterator, class T, class StrictWeakOrdering>
   ForwardIterator lower_bound(ForwardIterator first, ForwardIterator last, const T& value, StrictWeakOrdering comp);

   template <typename DerivedPolicy, typename ForwardIterator, typename LessThanComparable>
   _CCCL_HOST_DEVICE ForwardIterator upper_bound(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     const LessThanComparable& value);

   template <class ForwardIterator, class LessThanComparable>
   ForwardIterator upper_bound(ForwardIterator first, ForwardIterator last, const LessThanComparable& value);

   template <typename DerivedPolicy, typename ForwardIterator, typename T, typename StrictWeakOrdering>
   _CCCL_HOST_DEVICE ForwardIterator upper_bound(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     const T& value,
     StrictWeakOrdering comp);

   template <class ForwardIterator, class T, class StrictWeakOrdering>
   ForwardIterator upper_bound(ForwardIterator first, ForwardIterator last, const T& value, StrictWeakOrdering comp);

   template <typename DerivedPolicy, typename ForwardIterator, typename LessThanComparable>
   _CCCL_HOST_DEVICE bool binary_search(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     const LessThanComparable& value);

   template <class ForwardIterator, class LessThanComparable>
   bool binary_search(ForwardIterator first, ForwardIterator last, const LessThanComparable& value);

   template <typename DerivedPolicy, typename ForwardIterator, typename T, typename StrictWeakOrdering>
   _CCCL_HOST_DEVICE bool binary_search(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     const T& value,
     StrictWeakOrdering comp);

   template <class ForwardIterator, class T, class StrictWeakOrdering>
   bool binary_search(ForwardIterator first, ForwardIterator last, const T& value, StrictWeakOrdering comp);

   template <typename DerivedPolicy, typename ForwardIterator, typename LessThanComparable>
   _CCCL_HOST_DEVICE thrust::pair<ForwardIterator, ForwardIterator> equal_range(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     const LessThanComparable& value);

   template <class ForwardIterator, class LessThanComparable>
   thrust::pair<ForwardIterator, ForwardIterator>
   equal_range(ForwardIterator first, ForwardIterator last, const LessThanComparable& value);

   template <typename DerivedPolicy, typename ForwardIterator, typename T, typename StrictWeakOrdering>
   _CCCL_HOST_DEVICE thrust::pair<ForwardIterator, ForwardIterator> equal_range(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     const T& value,
     StrictWeakOrdering comp);

   template <class ForwardIterator, class T, class StrictWeakOrdering>
   thrust::pair<ForwardIterator, ForwardIterator>
   equal_range(ForwardIterator first, ForwardIterator last, const T& value, StrictWeakOrdering comp);

   // Vector Functions //

   template <typename DerivedPolicy, typename ForwardIterator, typename InputIterator, typename OutputIterator>
   _CCCL_HOST_DEVICE OutputIterator lower_bound(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result);

   template <class ForwardIterator, class InputIterator, class OutputIterator>
   OutputIterator lower_bound(
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result);

   template <typename DerivedPolicy,
             typename ForwardIterator,
             typename InputIterator,
             typename OutputIterator,
             typename StrictWeakOrdering>
   _CCCL_HOST_DEVICE OutputIterator lower_bound(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result,
     StrictWeakOrdering comp);

   template <class ForwardIterator, class InputIterator, class OutputIterator, class StrictWeakOrdering>
   OutputIterator lower_bound(
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result,
     StrictWeakOrdering comp);

   template <typename DerivedPolicy, typename ForwardIterator, typename InputIterator, typename OutputIterator>
   _CCCL_HOST_DEVICE OutputIterator upper_bound(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result);

   template <class ForwardIterator, class InputIterator, class OutputIterator>
   OutputIterator upper_bound(
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result);

   template <typename DerivedPolicy,
             typename ForwardIterator,
             typename InputIterator,
             typename OutputIterator,
             typename StrictWeakOrdering>
   _CCCL_HOST_DEVICE OutputIterator upper_bound(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result,
     StrictWeakOrdering comp);

   template <class ForwardIterator, class InputIterator, class OutputIterator, class StrictWeakOrdering>
   OutputIterator upper_bound(
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result,
     StrictWeakOrdering comp);

   template <typename DerivedPolicy, typename ForwardIterator, typename InputIterator, typename OutputIterator>
   _CCCL_HOST_DEVICE OutputIterator binary_search(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result);

   template <class ForwardIterator, class InputIterator, class OutputIterator>
   OutputIterator binary_search(
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result);

   template <typename DerivedPolicy,
             typename ForwardIterator,
             typename InputIterator,
             typename OutputIterator,
             typename StrictWeakOrdering>
   _CCCL_HOST_DEVICE OutputIterator binary_search(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result,
     StrictWeakOrdering comp);

   template <class ForwardIterator, class InputIterator, class OutputIterator, class StrictWeakOrdering>
   OutputIterator binary_search(
     ForwardIterator first,
     ForwardIterator last,
     InputIterator values_first,
     InputIterator values_last,
     OutputIterator result,
     StrictWeakOrdering comp);

   THRUST_NAMESPACE_END

   #include <thrust/detail/binary_search.inl>

