thrust\/replace.h
=================

File members: :ref:`thrust\/replace.h <replace_8h>`

.. code-block:: c++

   /*
    *  Copyright 2008-2013 NVIDIA Corporation
    *
    *  Licensed under the Apache License, Version 2.0 (the "License");
    *  you may not use this file except in compliance with the License.
    *  You may obtain a copy of the License at
    *
    *      http://www.apache.org/licenses/LICENSE-2.0
    *
    *  Unless required by applicable law or agreed to in writing, software
    *  distributed under the License is distributed on an "AS IS" BASIS,
    *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    *  See the License for the specific language governing permissions and
    *  limitations under the License.
    */

   #pragma once

   #include <thrust/detail/config.h>

   #if defined(_CCCL_IMPLICIT_SYSTEM_HEADER_GCC)
   #  pragma GCC system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_CLANG)
   #  pragma clang system_header
   #elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_MSVC)
   #  pragma system_header
   #endif // no system header
   #include <thrust/detail/execution_policy.h>

   THRUST_NAMESPACE_BEGIN

   template <typename DerivedPolicy, typename ForwardIterator, typename T>
   _CCCL_HOST_DEVICE void
   replace(const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
           ForwardIterator first,
           ForwardIterator last,
           const T& old_value,
           const T& new_value);

   template <typename ForwardIterator, typename T>
   void replace(ForwardIterator first, ForwardIterator last, const T& old_value, const T& new_value);

   template <typename DerivedPolicy, typename ForwardIterator, typename Predicate, typename T>
   _CCCL_HOST_DEVICE void replace_if(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     Predicate pred,
     const T& new_value);

   template <typename ForwardIterator, typename Predicate, typename T>
   void replace_if(ForwardIterator first, ForwardIterator last, Predicate pred, const T& new_value);

   template <typename DerivedPolicy, typename ForwardIterator, typename InputIterator, typename Predicate, typename T>
   _CCCL_HOST_DEVICE void replace_if(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     ForwardIterator first,
     ForwardIterator last,
     InputIterator stencil,
     Predicate pred,
     const T& new_value);

   template <typename ForwardIterator, typename InputIterator, typename Predicate, typename T>
   void replace_if(ForwardIterator first, ForwardIterator last, InputIterator stencil, Predicate pred, const T& new_value);

   template <typename DerivedPolicy, typename InputIterator, typename OutputIterator, typename T>
   _CCCL_HOST_DEVICE OutputIterator replace_copy(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     InputIterator first,
     InputIterator last,
     OutputIterator result,
     const T& old_value,
     const T& new_value);

   template <typename InputIterator, typename OutputIterator, typename T>
   OutputIterator
   replace_copy(InputIterator first, InputIterator last, OutputIterator result, const T& old_value, const T& new_value);

   template <typename DerivedPolicy, typename InputIterator, typename OutputIterator, typename Predicate, typename T>
   _CCCL_HOST_DEVICE OutputIterator replace_copy_if(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     InputIterator first,
     InputIterator last,
     OutputIterator result,
     Predicate pred,
     const T& new_value);

   template <typename InputIterator, typename OutputIterator, typename Predicate, typename T>
   OutputIterator
   replace_copy_if(InputIterator first, InputIterator last, OutputIterator result, Predicate pred, const T& new_value);

   template <typename DerivedPolicy,
             typename InputIterator1,
             typename InputIterator2,
             typename OutputIterator,
             typename Predicate,
             typename T>
   _CCCL_HOST_DEVICE OutputIterator replace_copy_if(
     const thrust::detail::execution_policy_base<DerivedPolicy>& exec,
     InputIterator1 first,
     InputIterator1 last,
     InputIterator2 stencil,
     OutputIterator result,
     Predicate pred,
     const T& new_value);

   template <typename InputIterator1, typename InputIterator2, typename OutputIterator, typename Predicate, typename T>
   OutputIterator replace_copy_if(
     InputIterator1 first,
     InputIterator1 last,
     InputIterator2 stencil,
     OutputIterator result,
     Predicate pred,
     const T& new_value);

   THRUST_NAMESPACE_END

   #include <thrust/detail/replace.inl>

