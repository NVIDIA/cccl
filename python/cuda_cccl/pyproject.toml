# Copyright (c) 2025, NVIDIA CORPORATION & AFFILIATES. ALL RIGHTS RESERVED.
#
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception

[build-system]
requires = ["scikit-build-core>=0.10", "setuptools_scm", "cython"]
build-backend = "scikit_build_core.build"

[project]
name = "cuda-cccl"
description = "CUDA Core Library for Python"
authors = [{ name = "NVIDIA Corporation" }]
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Environment :: GPU :: NVIDIA CUDA",
  "License :: OSI Approved :: Apache Software License",
]
requires-python = ">=3.10"

dependencies = [
  "numba>=0.60.0",
  "numpy",
  "cuda-pathfinder>=1.1.0",
  "cuda-core",
  "numba-cuda>=0.18.0",
]

dynamic = ["version"]
readme = { file = "README.md", content-type = "text/markdown" }

[project.optional-dependencies]
cu12 = ["cuda-bindings>=12.9.1,<13.0.0", "cuda-toolkit[nvrtc,nvjitlink]==12.*"]
cu13 = ["cuda-bindings>=13.0.0,<14.0.0", "cuda-toolkit[nvrtc,nvjitlink]==13.*"]
test-cu12 = [
  # an undocumented way to inherit the dependencies of the cu12 extra.
  # GH pypa #11296
  "cuda-cccl[cu12]",
  "pytest",
  "pytest-xdist",
  "cupy-cuda12x",
  "typing_extensions",
  "pytest-benchmark",
]
test-cu13 = [
  "cuda-cccl[cu13]",
  "pytest",
  "pytest-xdist",
  "cupy-cuda13x",
  "typing_extensions",
  "pytest-benchmark",
]

[project.urls]
Homepage = "https://developer.nvidia.com/"

[tool.scikit-build]
minimum-version = "build-system.requires"
build-dir = "build/{wheel_tag}"

[tool.scikit-build.cmake]
version = ">=3.21"
args = []
build-type = "Release"
source-dir = "."

[tool.scikit-build.ninja]
version = ">=1.11"
make-fallback = true

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.setuptools_scm"

[tool.setuptools_scm]
root = "../.."
git_describe_command = ["git", "describe", "--tags", "--match", "v[0-9]*"]


[tool.scikit-build.wheel.packages]
"cuda" = "cuda"
"cuda/cccl" = "cuda/cccl"

[tool.mypy]
python_version = "3.10"

[[tool.mypy.overrides]]
module = [
  "numba.*",
  "llvmlite",
  "cuda.cccl.headers.*",
  "cuda.cccl._cuda_version_utils.*",
  "cuda.bindings.*",
  "cuda.core.*",
]
ignore_missing_imports = true
follow_imports = "skip"

[tool.ruff]
extend = "../../pyproject.toml"

[tool.ruff.lint.isort]
known-first-party = [
  "cuda.cccl",
  "cuda.cccl.headers",
  "cuda.cccl.parallel",
  "cuda.cccl.cooperative",
]

[tool.pytest.ini_options]
markers = [
  "no_verify_sass: skip SASS verification check",
  "large: tests requiring large device memory allocations",
]
