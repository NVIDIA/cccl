
cuda_oldest: &cuda_oldest '11.1'
cuda_newest: &cuda_newest '12.3'

# The GPUs to test on
gpus:
  - 'a100'
  - 'v100'

# The version of the devcontainer images to use from https://hub.docker.com/r/rapidsai/devcontainers
devcontainer_version: '23.12'

# Each environment below will generate a unique build/test job
# See the "compute-matrix" job in the workflow for how this is parsed and used
# cuda: The CUDA Toolkit version
# os: The operating system used
# cpu: The CPU architecture
# compiler: The compiler to use
#   name: The compiler name
#   version: The compiler version
#   exe: The unverionsed compiler binary name
# std: The C++ standards to build for
#    This field is unique as it will generate an independent build/test job for each value

# Configurations that will run for every PR
pull_request:
  nvcc:
    - {cuda: *cuda_oldest, os: 'ubuntu18.04', cpu: 'amd64', compiler: {name: 'gcc',  version: '6',  exe: 'g++'},     std: [11, 14],         jobs: ['build']}
    - {cuda: *cuda_oldest, os: 'ubuntu18.04', cpu: 'amd64', compiler: {name: 'gcc',  version: '7',  exe: 'g++'},     std: [11, 14, 17],     jobs: ['build']}
    - {cuda: *cuda_oldest, os: 'ubuntu18.04', cpu: 'amd64', compiler: {name: 'gcc',  version: '8',  exe: 'g++'},     std: [11, 14, 17],     jobs: ['build']}
    - {cuda: *cuda_oldest, os: 'ubuntu18.04', cpu: 'amd64', compiler: {name: 'gcc',  version: '9',  exe: 'g++'},     std: [11, 14, 17],     jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu20.04', cpu: 'amd64', compiler: {name: 'gcc',  version: '7',  exe: 'g++'},     std: [11, 14, 17],     jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu20.04', cpu: 'amd64', compiler: {name: 'gcc',  version: '8',  exe: 'g++'},     std: [11, 14, 17],     jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu20.04', cpu: 'amd64', compiler: {name: 'gcc',  version: '9',  exe: 'g++'},     std: [11, 14, 17],     jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu20.04', cpu: 'amd64', compiler: {name: 'gcc',  version: '10', exe: 'g++'},     std: [11, 14, 17, 20], jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu22.04', cpu: 'amd64', compiler: {name: 'gcc',  version: '11', exe: 'g++'},     std: [11, 14, 17, 20], jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu22.04', cpu: 'amd64', compiler: {name: 'gcc',  version: '12', exe: 'g++'},     std: [11, 14, 17, 20], jobs: ['build', 'test']}
    - {cuda: *cuda_newest, os: 'ubuntu22.04', cpu: 'arm64', compiler: {name: 'gcc',  version: '12', exe: 'g++'},     std: [11, 14, 17, 20], jobs: ['build']}
    - {cuda: *cuda_oldest, os: 'ubuntu18.04', cpu: 'amd64', compiler: {name: 'llvm', version: '9',  exe: 'clang++'}, std: [11, 14, 17],     jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu20.04', cpu: 'amd64', compiler: {name: 'llvm', version: '9',  exe: 'clang++'}, std: [11, 14, 17],     jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu20.04', cpu: 'amd64', compiler: {name: 'llvm', version: '10', exe: 'clang++'}, std: [11, 14, 17],     jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu20.04', cpu: 'amd64', compiler: {name: 'llvm', version: '11', exe: 'clang++'}, std: [11, 14, 17, 20], jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu20.04', cpu: 'amd64', compiler: {name: 'llvm', version: '12', exe: 'clang++'}, std: [11, 14, 17, 20], jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu20.04', cpu: 'amd64', compiler: {name: 'llvm', version: '13', exe: 'clang++'}, std: [11, 14, 17, 20], jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu20.04', cpu: 'amd64', compiler: {name: 'llvm', version: '14', exe: 'clang++'}, std: [11, 14, 17, 20], jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu22.04', cpu: 'amd64', compiler: {name: 'llvm', version: '15', exe: 'clang++'}, std: [11, 14, 17, 20], jobs: ['build']}
    - {cuda: *cuda_newest, os: 'ubuntu22.04', cpu: 'amd64', compiler: {name: 'llvm', version: '16', exe: 'clang++'}, std: [11, 14, 17, 20], jobs: ['build', 'test']}
    - {cuda: *cuda_newest, os: 'ubuntu22.04', cpu: 'arm64', compiler: {name: 'llvm', version: '16', exe: 'clang++'}, std: [11, 14, 17, 20], jobs: ['build']}
    - {cuda: *cuda_oldest, os: 'windows2022', cpu: 'amd64', compiler: {name: 'cl',   version: '14.16', exe: 'cl++'}, std: [14, 17],         jobs: ['build']}
    - {cuda: *cuda_newest, os: 'windows2022', cpu: 'amd64', compiler: {name: 'cl',   version: '14.29', exe: 'cl++'}, std: [14, 17],         jobs: ['build']}
    - {cuda: *cuda_newest, os: 'windows2022', cpu: 'amd64', compiler: {name: 'cl',   version: '14.36', exe: 'cl++'}, std: [14, 17, 20],     jobs: ['build']}
  nvrtc:
    - {cuda: *cuda_newest, os: 'ubuntu22.04', cpu: 'amd64', gpu_build_archs: '70', std: [11, 14, 17, 20]}
  clang-cuda:
    - {lib: ['thrust', 'cub', 'libcudacxx'], cuda: *cuda_newest, os: 'ubuntu22.04', cpu: 'amd64', compiler: {name: 'llvm', version: '16', exe: 'clang++'}, std: [17, 20]}
  cccl-infra:
    # Strategy: Oldest CUDA + Oldest Host compiler && Newest CUDA + Newest Host Compiler
    - {cuda: *cuda_oldest, os: 'ubuntu18.04', cpu: 'amd64', compiler: {name: 'gcc', version: '6', exe: 'g++'}}
    - {cuda: *cuda_oldest, os: 'ubuntu18.04', cpu: 'amd64', compiler: {name: 'llvm', version: '9', exe: 'clang++'}}
    - {cuda: *cuda_newest, os: 'ubuntu22.04', cpu: 'amd64', compiler: {name: 'gcc', version: '12', exe: 'g++'}}
    - {cuda: *cuda_newest, os: 'ubuntu22.04', cpu: 'amd64', compiler: {name: 'llvm', version: '16', exe: 'clang++'}}
