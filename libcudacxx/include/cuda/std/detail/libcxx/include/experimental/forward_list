// -*- C++ -*-
//===--------------------------- forward_list -----------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCUDACXX_EXPERIMENTAL_FORWARD_LIST
#define _LIBCUDACXX_EXPERIMENTAL_FORWARD_LIST
/*
    experimental/forward_list synopsis

// C++1z
namespace std {
namespace experimental {
inline namespace fundamentals_v1 {
namespace pmr {

  template <class T>
  using forward_list = std::forward_list<T,polymorphic_allocator<T>>;

} // namespace pmr
} // namespace fundamentals_v1
} // namespace experimental
} // namespace std

 */

#include <experimental/__config>
#include <forward_list>
#include <experimental/memory_resource>

#if defined(_LIBCUDACXX_USE_PRAGMA_GCC_SYSTEM_HEADER)
#pragma GCC system_header
#endif

_LIBCUDACXX_BEGIN_NAMESPACE_LFTS_PMR

template <class _ValueT>
using forward_list = _CUDA_VSTD::forward_list<_ValueT, polymorphic_allocator<_ValueT>>;

_LIBCUDACXX_END_NAMESPACE_LFTS_PMR

#endif /* _LIBCUDACXX_EXPERIMENTAL_FORWARD_LIST */
