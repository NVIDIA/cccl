// -*- C++ -*-
//===--------------------------- version ----------------------------------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCUDACXX_VERSIONH
#define _LIBCUDACXX_VERSIONH


/*
  version synopsis

Macro name                                              Value   Headers
__cpp_lib_adaptor_iterator_pair_constructor             202106L <queue> <stack>
__cpp_lib_addressof_constexpr                           201603L <memory>
__cpp_lib_allocate_at_least                             202106L <memory>
__cpp_lib_allocator_traits_is_always_equal              201411L <deque> <forward_list> <list>
                                                                <map> <memory> <scoped_allocator>
                                                                <set> <string> <unordered_map>
                                                                <unordered_set> <vector>
__cpp_lib_any                                           201606L <any>
__cpp_lib_apply                                         201603L <tuple>
__cpp_lib_array_constexpr                               201811L <array> <iterator>
                                                        201603L // C++17
__cpp_lib_as_const                                      201510L <utility>
__cpp_lib_associative_heterogeneous_erasure             202110L <map> <set> <unordered_map>
                                                                <unordered_set>
__cpp_lib_assume_aligned                                201811L <memory>
__cpp_lib_atomic_flag_test                              201907L <atomic>
__cpp_lib_atomic_float                                  201711L <atomic>
__cpp_lib_atomic_is_always_lock_free                    201603L <atomic>
__cpp_lib_atomic_lock_free_type_aliases                 201907L <atomic>
__cpp_lib_atomic_ref                                    201806L <atomic>
__cpp_lib_atomic_shared_ptr                             201711L <atomic>
__cpp_lib_atomic_value_initialization                   201911L <atomic> <memory>
__cpp_lib_atomic_wait                                   201907L <atomic>
__cpp_lib_barrier                                       201907L <barrier>
__cpp_lib_bind_back                                     202202L <functional>
__cpp_lib_bind_front                                    201907L <functional>
__cpp_lib_bit_cast                                      201806L <bit>
__cpp_lib_bitops                                        201907L <bit>
__cpp_lib_bool_constant                                 201505L <type_traits>
__cpp_lib_bounded_array_traits                          201902L <type_traits>
__cpp_lib_boyer_moore_searcher                          201603L <functional>
__cpp_lib_byte                                          201603L <cstddef>
__cpp_lib_byteswap                                      202110L <bit>
__cpp_lib_char8_t                                       201907L <atomic> <filesystem> <istream>
                                                                <limits> <locale> <ostream>
                                                                <string> <string_view>
__cpp_lib_chrono                                        201611L <chrono>
__cpp_lib_chrono_udls                                   201304L <chrono>
__cpp_lib_clamp                                         201603L <algorithm>
__cpp_lib_complex_udls                                  201309L <complex>
__cpp_lib_concepts                                      202002L <concepts>
__cpp_lib_constexpr_algorithms                          201806L <algorithm>
__cpp_lib_constexpr_bitset                              202207L <bitset>
__cpp_lib_constexpr_charconv                            202207L <charconv>
__cpp_lib_constexpr_cmath                               202202L <cmath> <cstdlib>
__cpp_lib_constexpr_complex                             201711L <complex>
__cpp_lib_constexpr_dynamic_alloc                       201907L <memory>
__cpp_lib_constexpr_functional                          201907L <functional>
__cpp_lib_constexpr_iterator                            201811L <iterator>
__cpp_lib_constexpr_memory                              202202L <memory>
                                                        201811L // C++20
__cpp_lib_constexpr_numeric                             201911L <numeric>
__cpp_lib_constexpr_string                              201907L <string>
__cpp_lib_constexpr_string_view                         201811L <string_view>
__cpp_lib_constexpr_tuple                               201811L <tuple>
__cpp_lib_constexpr_typeinfo                            202106L <typeinfo>
__cpp_lib_constexpr_utility                             201811L <utility>
__cpp_lib_constexpr_vector                              201907L <vector>
__cpp_lib_coroutine                                     201902L <coroutine>
__cpp_lib_destroying_delete                             201806L <new>
__cpp_lib_enable_shared_from_this                       201603L <memory>
__cpp_lib_endian                                        201907L <bit>
__cpp_lib_erase_if                                      202002L <deque> <forward_list> <list>
                                                                <map> <set> <string>
                                                                <unordered_map> <unordered_set> <vector>
__cpp_lib_exchange_function                             201304L <utility>
__cpp_lib_execution                                     201902L <execution>
                                                        201603L // C++17
__cpp_lib_filesystem                                    201703L <filesystem>
__cpp_lib_format                                        202106L <format>
__cpp_lib_forward_like                                  202207L <utility>
__cpp_lib_gcd_lcm                                       201606L <numeric>
__cpp_lib_generic_associative_lookup                    201304L <map> <set>
__cpp_lib_generic_unordered_lookup                      201811L <unordered_map> <unordered_set>
__cpp_lib_hardware_interference_size                    201703L <new>
__cpp_lib_has_unique_object_representations             201606L <type_traits>
__cpp_lib_hypot                                         201603L <cmath>
__cpp_lib_incomplete_container_elements                 201505L <forward_list> <list> <vector>
__cpp_lib_int_pow2                                      202002L <bit>
__cpp_lib_integer_comparison_functions                  202002L <utility>
__cpp_lib_integer_sequence                              201304L <utility>
__cpp_lib_integral_constant_callable                    201304L <type_traits>
__cpp_lib_interpolate                                   201902L <cmath> <numeric>
__cpp_lib_invoke                                        201411L <functional>
__cpp_lib_invoke_r                                      202106L <functional>
__cpp_lib_is_aggregate                                  201703L <type_traits>
__cpp_lib_is_constant_evaluated                         201811L <type_traits>
__cpp_lib_is_final                                      201402L <type_traits>
__cpp_lib_is_invocable                                  201703L <type_traits>
__cpp_lib_is_layout_compatible                          201907L <type_traits>
__cpp_lib_is_nothrow_convertible                        201806L <type_traits>
__cpp_lib_is_null_pointer                               201309L <type_traits>
__cpp_lib_is_pointer_interconvertible                   201907L <type_traits>
__cpp_lib_is_scoped_enum                                202011L <type_traits>
__cpp_lib_is_swappable                                  201603L <type_traits>
__cpp_lib_jthread                                       201911L <stop_token> <thread>
__cpp_lib_latch                                         201907L <latch>
__cpp_lib_launder                                       201606L <new>
__cpp_lib_list_remove_return_type                       201806L <forward_list> <list>
__cpp_lib_logical_traits                                201510L <type_traits>
__cpp_lib_make_from_tuple                               201606L <tuple>
__cpp_lib_make_reverse_iterator                         201402L <iterator>
__cpp_lib_make_unique                                   201304L <memory>
__cpp_lib_map_try_emplace                               201411L <map>
__cpp_lib_math_constants                                201907L <numbers>
__cpp_lib_math_special_functions                        201603L <cmath>
__cpp_lib_memory_resource                               201603L <memory_resource>
__cpp_lib_move_only_function                            202110L <functional>
__cpp_lib_node_extract                                  201606L <map> <set> <unordered_map>
                                                                <unordered_set>
__cpp_lib_nonmember_container_access                    201411L <array> <deque> <forward_list>
                                                                <iterator> <list> <map>
                                                                <regex> <set> <string>
                                                                <unordered_map> <unordered_set> <vector>
__cpp_lib_not_fn                                        201603L <functional>
__cpp_lib_null_iterators                                201304L <iterator>
__cpp_lib_optional                                      202110L <optional>
                                                        201606L // C++17
__cpp_lib_out_ptr                                       202106L <memory>
__cpp_lib_parallel_algorithm                            201603L <algorithm> <numeric>
__cpp_lib_polymorphic_allocator                         201902L <memory_resource>
__cpp_lib_quoted_string_io                              201304L <iomanip>
__cpp_lib_ranges                                        201811L <algorithm> <functional> <iterator>
                                                                <memory> <ranges>
__cpp_lib_ranges_chunk                                  202202L <ranges>
__cpp_lib_ranges_chunk_by                               202202L <ranges>
__cpp_lib_ranges_iota                                   202202L <numeric>
__cpp_lib_ranges_join_with                              202202L <ranges>
__cpp_lib_ranges_slide                                  202202L <ranges>
__cpp_lib_ranges_starts_ends_with                       202106L <algorithm>
__cpp_lib_ranges_to_container                           202202L <deque> <forward_list> <list>
                                                                <map> <priority_queue> <queue>
                                                                <set> <stack> <string>
                                                                <unordered_map> <unordered_set> <vector>
__cpp_lib_ranges_zip                                    202110L <ranges> <tuple> <utility>
__cpp_lib_raw_memory_algorithms                         201606L <memory>
__cpp_lib_reference_from_temporary                      202202L <type_traits>
__cpp_lib_remove_cvref                                  201711L <type_traits>
__cpp_lib_result_of_sfinae                              201210L <functional> <type_traits>
__cpp_lib_robust_nonmodifying_seq_ops                   201304L <algorithm>
__cpp_lib_sample                                        201603L <algorithm>
__cpp_lib_scoped_lock                                   201703L <mutex>
__cpp_lib_semaphore                                     201907L <semaphore>
__cpp_lib_shared_mutex                                  201505L <shared_mutex>
__cpp_lib_shared_ptr_arrays                             201707L <memory>
                                                        201611L // C++17
__cpp_lib_shared_ptr_weak_type                          201606L <memory>
__cpp_lib_shared_timed_mutex                            201402L <shared_mutex>
__cpp_lib_shift                                         201806L <algorithm>
__cpp_lib_smart_ptr_for_overwrite                       202002L <memory>
__cpp_lib_source_location                               201907L <source_location>
__cpp_lib_span                                          202002L <span>
__cpp_lib_spanstream                                    202106L <spanstream>
__cpp_lib_ssize                                         201902L <iterator>
__cpp_lib_stacktrace                                    202011L <stacktrace>
__cpp_lib_starts_ends_with                              201711L <string> <string_view>
__cpp_lib_stdatomic_h                                   202011L <stdatomic.h>
__cpp_lib_string_contains                               202011L <string> <string_view>
__cpp_lib_string_resize_and_overwrite                   202110L <string>
__cpp_lib_string_udls                                   201304L <string>
__cpp_lib_string_view                                   201803L <string> <string_view>
                                                        201606L // C++17
__cpp_lib_syncbuf                                       201803L <syncstream>
__cpp_lib_three_way_comparison                          201907L <compare>
__cpp_lib_to_address                                    201711L <memory>
__cpp_lib_to_array                                      201907L <array>
__cpp_lib_to_chars                                      201611L <charconv>
__cpp_lib_to_underlying                                 202102L <utility>
__cpp_lib_transformation_trait_aliases                  201304L <type_traits>
__cpp_lib_transparent_operators                         201510L <functional> <memory>
                                                        201210L // C++14
__cpp_lib_tuple_element_t                               201402L <tuple>
__cpp_lib_tuples_by_type                                201304L <tuple> <utility>
__cpp_lib_type_identity                                 201806L <type_traits>
__cpp_lib_type_trait_variable_templates                 201510L <type_traits>
__cpp_lib_uncaught_exceptions                           201411L <exception>
__cpp_lib_unordered_map_try_emplace                     201411L <unordered_map>
__cpp_lib_unreachable                                   202202L <utility>
__cpp_lib_unwrap_ref                                    201811L <functional>
__cpp_lib_variant                                       202102L <variant>
__cpp_lib_void_t                                        201411L <type_traits>

*/

#ifndef __cuda_std__
#include <__config>
#endif // __cuda_std__

// If we are replacing the stl we need to define our own feature test macros.
// However, if we are in __cuda_std__ we need to define our own symbols to not
// conflict with the host stl.
// At the same time we want bring in all feature test macros from host
#ifdef __cuda_std__
#if __has_include(<version>) // <version> should be the smallest include possible
#include <version>
#elif !defined(_LIBCUDACXX_COMPILER_NVRTC)
#include <ciso646> // otherwise go for the smallest possible header
#endif
#endif // __cuda_std__

#if defined(_LIBCUDACXX_USE_PRAGMA_GCC_SYSTEM_HEADER)
#pragma GCC system_header
#endif

// We unconditionally define `__cccl_lib_meow` so that there is only one place to set the value
#if _LIBCUDACXX_STD_VER > 11
# define __cccl_lib_chrono_udls                          201304L
# define __cccl_lib_complex_udls                         201309L
#ifdef _LIBCUDACXX_IS_CONSTANT_EVALUATED
# define __cccl_lib_constexpr_complex                    201711L
#endif
# define __cccl_lib_concepts                             202002L
# define __cccl_lib_exchange_function                    201304L
# define __cccl_lib_expected                             202211L
// # define __cccl_lib_generic_associative_lookup           201304L
# define __cccl_lib_integer_sequence                     201304L
# define __cccl_lib_integral_constant_callable           201304L
# define __cccl_lib_is_final                             201402L
# define __cccl_lib_is_null_pointer                      201309L
# define __cccl_lib_make_reverse_iterator                201402L
// # define __cccl_lib_make_unique                          201304L
# define __cccl_lib_null_iterators                       201304L
# define __cccl_lib_optional                             202110L
// # define __cccl_lib_quoted_string_io                     201304L
# define __cccl_lib_result_of_sfinae                     201210L
# define __cccl_lib_robust_nonmodifying_seq_ops          201304L
# if !defined(_LIBCUDACXX_HAS_NO_THREADS)
// #   define __cccl_lib_shared_timed_mutex                 201402L
# endif
# define __cccl_lib_span                                 201902L
// # define __cccl_lib_string_udls                          201304L
# define __cccl_lib_transformation_trait_aliases         201304L
# define __cccl_lib_transparent_operators                201210L
# define __cccl_lib_tuple_element_t                      201402L
# define __cccl_lib_tuples_by_type                       201304L
#endif // _LIBCUDACXX_STD_VER > 11

#if _LIBCUDACXX_STD_VER > 14
# if defined(_LIBCUDACXX_ADDRESSOF)
#   define __cccl_lib_addressof_constexpr                201603L
# endif
// # define __cccl_lib_allocator_traits_is_always_equal     201411L
// # define __cccl_lib_any                                  201606L
# define __cccl_lib_apply                                201603L
# define __cccl_lib_array_constexpr                      201603L
# define __cccl_lib_as_const                             201510L
# if !defined(_LIBCUDACXX_HAS_NO_THREADS)
#   define __cccl_lib_atomic_is_always_lock_free         201603L
# endif
# define __cccl_lib_bind_front                           201907L
# define __cccl_lib_bool_constant                        201505L
// # define __cccl_lib_boyer_moore_searcher                 201603L
# define __cccl_lib_byte                                 201603L
# define __cccl_lib_chrono                               201611L
// # define __cccl_lib_clamp                                201603L
// # define __cccl_lib_enable_shared_from_this              201603L
// # define __cccl_lib_execution                            201603L
// # define __cccl_lib_filesystem                           201703L
# define __cccl_lib_gcd_lcm                              201606L
# define __cccl_lib_hardware_interference_size           201703L
# if defined(_LIBCUDACXX_HAS_UNIQUE_OBJECT_REPRESENTATIONS)
#   define __cccl_lib_has_unique_object_representations  201606L
# endif
# define __cccl_lib_hypot                                201603L
// # define __cccl_lib_incomplete_container_elements        201505L
# define __cccl_lib_invoke                               201411L
# if !defined(_LIBCUDACXX_HAS_NO_IS_AGGREGATE)
#   define __cccl_lib_is_aggregate                       201703L
# endif
# define __cccl_lib_is_invocable                         201703L
# define __cccl_lib_is_swappable                         201603L
# define __cccl_lib_launder                              201606L
# define __cccl_lib_logical_traits                       201510L
# define __cccl_lib_make_from_tuple                      201606L
// # define __cccl_lib_map_try_emplace                      201411L
// # define __cccl_lib_math_special_functions               201603L
// # define __cccl_lib_memory_resource                      201603L
// # define __cccl_lib_node_extract                         201606L
// # define __cccl_lib_nonmember_container_access           201411L
# define __cccl_lib_not_fn                               201603L
// # define __cccl_lib_parallel_algorithm                   201603L
// # define __cccl_lib_raw_memory_algorithms                201606L
// # define __cccl_lib_sample                               201603L
// # define __cccl_lib_scoped_lock                          201703L
# if !defined(_LIBCUDACXX_HAS_NO_THREADS)
// #   define __cccl_lib_shared_mutex                       201505L
# endif
// # define __cccl_lib_shared_ptr_arrays                    201611L
// # define __cccl_lib_shared_ptr_weak_type                 201606L
// # define __cccl_lib_string_view                          201606L
// # define __cccl_lib_to_chars                             201611L
# define __cccl_lib_type_trait_variable_templates        201510L
# define __cccl_lib_uncaught_exceptions                  201411L
# define __cccl_lib_unordered_map_try_emplace            201411L
# define __cccl_lib_variant                              201606L
# define __cccl_lib_void_t                               201411L
#endif // _LIBCUDACXX_STD_VER > 14

#if _LIBCUDACXX_STD_VER > 17
# undef  __cccl_lib_array_constexpr
# define __cccl_lib_array_constexpr                      201811L
// # define __cccl_lib_assume_aligned                       201811L
# define __cccl_lib_atomic_flag_test                     201907L
# define __cccl_lib_atomic_float                         201711L
# define __cccl_lib_atomic_lock_free_type_aliases        201907L
# if !defined(_LIBCUDACXX_HAS_NO_THREADS)
#   define __cccl_lib_atomic_ref                         201806L
#endif
// # define __cccl_lib_atomic_shared_ptr                    201711L
# define __cccl_lib_atomic_value_initialization          201911L
# if !defined(_LIBCUDACXX_AVAILABILITY_DISABLE_FTM___cpp_lib_atomic_wait)
#   define __cccl_lib_atomic_wait                        201907L
# endif
# if !defined(_LIBCUDACXX_HAS_NO_THREADS) && !defined(_LIBCUDACXX_AVAILABILITY_DISABLE_FTM___cpp_lib_barrier)
#   define __cccl_lib_barrier                            201907L
# endif
# define __cccl_lib_bit_cast                             201806L
# define __cccl_lib_bitops                               201907L
# define __cccl_lib_bounded_array_traits                 201902L
# if !defined(_LIBCUDACXX_NO_HAS_CHAR8_T)
#   define __cccl_lib_char8_t                            201811L
# endif
// # define __cccl_lib_constexpr_algorithms                 201806L
// # define __cccl_lib_constexpr_dynamic_alloc              201907L
# define __cccl_lib_constexpr_functional                 201907L
// # define __cccl_lib_constexpr_iterator                   201811L
// # define __cccl_lib_constexpr_memory                     201811L
// # define __cccl_lib_constexpr_misc                       201811L
// # define __cccl_lib_constexpr_numeric                    201911L
// # define __cccl_lib_constexpr_string                     201907L
// # define __cccl_lib_constexpr_string_view                201811L
// # define __cccl_lib_constexpr_swap_algorithms            201806L
// # define __cccl_lib_constexpr_tuple                      201811L
// # define __cccl_lib_constexpr_utility                    201811L
// # define __cccl_lib_constexpr_vector                     201907L
// # define __cccl_lib_coroutine                            201902L
# if _LIBCUDACXX_STD_VER > 17 && defined(__cpp_impl_destroying_delete) && __cpp_impl_destroying_delete >= 201806L
#   define __cccl_lib_destroying_delete                  201806L
# endif
// # define __cccl_lib_endian                               201907L
// # define __cccl_lib_erase_if                             201811L
// # undef  __cccl_lib_execution
// # define __cccl_lib_execution                            201902L
# if !defined(_LIBCUDACXX_AVAILABILITY_DISABLE_FTM___cpp_lib_format) && !defined(_LIBCUDACXX_HAS_NO_INCOMPLETE_FORMAT)
// #   define __cccl_lib_format                             202106L
# endif
// # define __cccl_lib_generic_unordered_lookup             201811L
// # define __cccl_lib_int_pow2                             202002L
// # define __cccl_lib_integer_comparison_functions         202002L
// # define __cccl_lib_interpolate                          201902L
# if defined(_LIBCUDACXX_IS_CONSTANT_EVALUATED)
#   define __cccl_lib_is_constant_evaluated              201811L
# endif
// # define __cccl_lib_is_layout_compatible                 201907L
# define __cccl_lib_is_nothrow_convertible               201806L
// # define __cccl_lib_is_pointer_interconvertible          201907L
# if !defined(_LIBCUDACXX_HAS_NO_THREADS)
// #   define __cccl_lib_jthread                            201911L
# endif
# if !defined(_LIBCUDACXX_HAS_NO_THREADS) && !defined(_LIBCUDACXX_AVAILABILITY_DISABLE_FTM___cpp_lib_latch)
// #   define __cccl_lib_latch                              201907L
# endif
// # define __cccl_lib_list_remove_return_type              201806L
// # define __cccl_lib_math_constants                       201907L
// # define __cccl_lib_polymorphic_allocator                201902L
// # define __cccl_lib_ranges                               201811L
// # define __cccl_lib_remove_cvref                         201711L
# if !defined(_LIBCUDACXX_HAS_NO_THREADS) && !defined(_LIBCUDACXX_AVAILABILITY_DISABLE_FTM___cpp_lib_semaphore)
// #   define __cccl_lib_semaphore                          201907L
# endif
// # undef  __cccl_lib_shared_ptr_arrays
// # define __cccl_lib_shared_ptr_arrays                    201707L
// # define __cccl_lib_shift                                201806L
// # define __cccl_lib_smart_ptr_for_overwrite              202002L
// # define __cccl_lib_source_location                      201907L
// # define __cccl_lib_ssize                                201902L
// # define __cccl_lib_starts_ends_with                     201711L
// # undef  __cccl_lib_string_view
// # define __cccl_lib_string_view                          201803L
// # define __cccl_lib_syncbuf                              201803L
// # define __cccl_lib_three_way_comparison                 201907L
// # define __cccl_lib_to_address                           201711L
// # define __cccl_lib_to_array                             201907L
// # define __cccl_lib_type_identity                        201806L
# define __cccl_lib_unwrap_ref                           201811L
#endif // _LIBCUDACXX_STD_VER > 17

#if _LIBCUDACXX_STD_VER > 20
// # define __cccl_lib_adaptor_iterator_pair_constructor    202106L
// # define __cccl_lib_allocate_at_least                    202106L
// # define __cccl_lib_associative_heterogeneous_erasure    202110L
// # define __cccl_lib_bind_back                            202202L
// # define __cccl_lib_byteswap                             202110L
// # define __cccl_lib_constexpr_bitset                     202207L
// # define __cccl_lib_constexpr_charconv                   202207L
// # define __cccl_lib_constexpr_cmath                      202202L
// # undef  __cccl_lib_constexpr_memory
// # define __cccl_lib_constexpr_memory                     202202L
// # define __cccl_lib_constexpr_typeinfo                   202106L
# define __cccl_lib_forward_like                         202207L
// # define __cccl_lib_invoke_r                             202106L
# define __cccl_lib_is_scoped_enum                       202011L
// # define __cccl_lib_move_only_function                   202110L
// # define __cccl_lib_out_ptr                              202106L
// # define __cccl_lib_ranges_chunk                         202202L
// # define __cccl_lib_ranges_chunk_by                      202202L
// # define __cccl_lib_ranges_iota                          202202L
// # define __cccl_lib_ranges_join_with                     202202L
// # define __cccl_lib_ranges_slide                         202202L
// # define __cccl_lib_ranges_starts_ends_with              202106L
// # define __cccl_lib_ranges_to_container                  202202L
// # define __cccl_lib_ranges_zip                           202110L
// # define __cccl_lib_reference_from_temporary             202202L
// # define __cccl_lib_spanstream                           202106L
// # define __cccl_lib_stacktrace                           202011L
// # define __cccl_lib_stdatomic_h                          202011L
// # define __cccl_lib_string_contains                      202011L
// # define __cccl_lib_string_resize_and_overwrite          202110L
# define __cccl_lib_to_underlying                        202102L
# define __cccl_lib_unreachable                          202202L

#endif // _LIBCUDACXX_STD_VER > 20

#ifndef __cuda_std__
#if _LIBCUDACXX_STD_VER > 11
# define __cpp_lib_chrono_udls                          __cccl_lib_chrono_udls
# define __cpp_lib_complex_udls                         __cccl_lib_complex_udls
#ifdef __cccl_lib_constexpr_complex
# define __cpp_lib_constexpr_complex                    __cccl_lib_constexpr_complex
#endif
# define __cpp_lib_concepts                             __cccl_lib_concepts
# define __cpp_lib_exchange_function                    __cccl_lib_exchange_function
# define __cpp_lib_expected                             __cccl_lib_expected
# define __cpp_lib_generic_associative_lookup           201304L
# define __cpp_lib_integer_sequence                     __cccl_lib_integer_sequence
# define __cpp_lib_integral_constant_callable           __cccl_lib_integral_constant_callable
# define __cpp_lib_is_final                             __cccl_lib_is_final
# define __cpp_lib_is_null_pointer                      __cccl_lib_is_null_pointer
# define __cpp_lib_make_reverse_iterator                __cccl_lib_make_reverse_iterator
# define __cpp_lib_make_unique                          201304L
# define __cpp_lib_null_iterators                       __cccl_lib_null_iterators
# define __cpp_lib_quoted_string_io                     201304L
# define __cpp_lib_result_of_sfinae                     __cccl_lib_result_of_sfinae
# define __cpp_lib_robust_nonmodifying_seq_ops          __cccl_lib_robust_nonmodifying_seq_ops
# ifdef __cccl_lib_shared_timed_mutex
#   define __cpp_lib_shared_timed_mutex                 201402L
# endif
# define __cpp_lib_span                                 __cccl_lib_span
# define __cpp_lib_string_udls                          201304L
# define __cpp_lib_transformation_trait_aliases         __cccl_lib_transformation_trait_aliases
# define __cpp_lib_transparent_operators                __cccl_lib_transparent_operators
# define __cpp_lib_tuple_element_t                      __cccl_lib_tuple_element_t
# define __cpp_lib_tuples_by_type                       __cccl_lib_tuples_by_type
#endif // _LIBCUDACXX_STD_VER > 11

#if _LIBCUDACXX_STD_VER > 14
# ifdef __cccl_lib_addressof_constexpr
#   define __cpp_lib_addressof_constexpr                __cccl_lib_addressof_constexpr
# endif
# define __cpp_lib_allocator_traits_is_always_equal     201411L
# define __cpp_lib_any                                  201606L
# define __cpp_lib_apply                                __cccl_lib_apply
# define __cpp_lib_array_constexpr                      __cccl_lib_array_constexpr
# define __cpp_lib_as_const                             __cccl_lib_as_const
# ifdef __cccl_lib_atomic_is_always_lock_free
#   define __cpp_lib_atomic_is_always_lock_free         __cccl_lib_atomic_is_always_lock_free
# endif
# define __cpp_lib_bind_front                           __cccl_lib_bind_front
# define __cpp_lib_bool_constant                        __cccl_lib_bool_constant
// # define __cpp_lib_boyer_moore_searcher                 __cccl_lib_boyer_moore_searcher
# define __cpp_lib_byte                                 __cccl_lib_byte
# define __cpp_lib_chrono                               __cccl_lib_chrono
# define __cpp_lib_clamp                                201603L
# define __cpp_lib_enable_shared_from_this              201603L
// # define __cpp_lib_execution                            __cccl_lib_execution
# define __cpp_lib_filesystem                           201703L
# define __cpp_lib_gcd_lcm                              __cccl_lib_gcd_lcm
# define __cpp_lib_hardware_interference_size           __cccl_lib_hardware_interference_size
# ifdef __cccl_lib_has_unique_object_representations
#   define __cpp_lib_has_unique_object_representations  __cccl_lib_has_unique_object_representations
# endif
# define __cpp_lib_hypot                                __cccl_lib_hypot
# define __cpp_lib_incomplete_container_elements        201505L
# define __cpp_lib_invoke                               __cccl_lib_invoke
# ifdef __cccl_lib_is_aggregate
#   define __cpp_lib_is_aggregate                       __cccl_lib_is_aggregate
# endif
# define __cpp_lib_is_invocable                         __cccl_lib_is_invocable
# define __cpp_lib_is_swappable                         __cccl_lib_is_swappable
# define __cpp_lib_launder                              __cccl_lib_launder
# define __cpp_lib_logical_traits                       __cccl_lib_logical_traits
# define __cpp_lib_make_from_tuple                      __cccl_lib_make_from_tuple
# define __cpp_lib_map_try_emplace                      201411L
// # define __cpp_lib_math_special_functions               __cccl_lib_math_special_functions
// # define __cpp_lib_memory_resource                      __cccl_lib_memory_resource
# define __cpp_lib_node_extract                         201606L
# define __cpp_lib_nonmember_container_access           201411L
# define __cpp_lib_not_fn                               __cccl_lib_not_fn
# define __cpp_lib_optional                             __cccl_lib_optional
// # define __cpp_lib_parallel_algorithm                   __cccl_lib_parallel_algorithm
# define __cpp_lib_raw_memory_algorithms                201606L
# define __cpp_lib_sample                               201603L
# define __cpp_lib_scoped_lock                          201703L
# ifdef __cccl_lib_shared_mutex
#   define __cpp_lib_shared_mutex                       201505L
# endif
// # define __cpp_lib_shared_ptr_arrays                    __cccl_lib_shared_ptr_arrays
# define __cpp_lib_shared_ptr_weak_type                 201606L
# define __cpp_lib_string_view                          201606L
// # define __cpp_lib_to_chars                             __cccl_lib_to_chars
# define __cpp_lib_type_trait_variable_templates        __cccl_lib_type_trait_variable_templates
# define __cpp_lib_uncaught_exceptions                  __cccl_lib_uncaught_exceptions
# define __cpp_lib_unordered_map_try_emplace            __cccl_lib_unordered_map_try_emplace
# define __cpp_lib_variant                              __cccl_lib_variant
# define __cpp_lib_void_t                               __cccl_lib_void_t
#endif // _LIBCUDACXX_STD_VER > 14

#if _LIBCUDACXX_STD_VER > 17
// # undef  __cpp_lib_array_constexpr
// # define __cpp_lib_array_constexpr                      __cccl_lib_array_constexpr
// # define __cpp_lib_assume_aligned                       __cccl_lib_assume_aligned
// # define __cpp_lib_atomic_flag_test                     __cccl_lib_atomic_flag_test
// # define __cpp_lib_atomic_float                         __cccl_lib_atomic_float
// # define __cpp_lib_atomic_lock_free_type_aliases        __cccl_lib_atomic_lock_free_type_aliases
# ifdef __cccl_lib_atomic_ref
#   define __cpp_lib_atomic_ref                         __cccl_lib_atomic_ref
#endif
// # define __cpp_lib_atomic_shared_ptr                    __cccl_lib_atomic_shared_ptr
// # define __cpp_lib_atomic_value_initialization          __cccl_lib_atomic_value_initialization
# ifdef __cccl_lib_atomic_wait
// #   define __cpp_lib_atomic_wait                        __cccl_lib_atomic_wait
# endif
# if !defined(_LIBCUDACXX_HAS_NO_THREADS) && !defined(_LIBCUDACXX_AVAILABILITY_DISABLE_FTM___cpp_lib_barrier)
#   define __cpp_lib_barrier                            __cccl_lib_barrier
# endif
// # define __cpp_lib_bit_cast                             __cccl_lib_bit_cast
// # define __cpp_lib_bitops                               __cccl_lib_bitops
// # define __cpp_lib_bounded_array_traits                 __cccl_lib_bounded_array_traits
# ifdef __cccl_lib_char8_t
#   define __cpp_lib_char8_t                            __cccl_lib_char8_t
# endif
// # define __cpp_lib_constexpr_algorithms                 __cccl_lib_constexpr_algorithms
// # define __cpp_lib_constexpr_dynamic_alloc              __cccl_lib_constexpr_dynamic_alloc
// # define __cpp_lib_constexpr_functional                 __cccl_lib_constexpr_functional
// # define __cpp_lib_constexpr_iterator                   __cccl_lib_constexpr_iterator
// # define __cpp_lib_constexpr_memory                     __cccl_lib_constexpr_memory
// # define __cpp_lib_constexpr_misc                       __cccl_lib_constexpr_misc
// # define __cpp_lib_constexpr_numeric                    __cccl_lib_constexpr_numeric
// # define __cpp_lib_constexpr_string                     __cccl_lib_constexpr_string
// # define __cpp_lib_constexpr_string_view                __cccl_lib_constexpr_string_view
// # define __cpp_lib_constexpr_swap_algorithms            __cccl_lib_constexpr_swap_algorithms
// # define __cpp_lib_constexpr_tuple                      __cccl_lib_constexpr_tuple
// # define __cpp_lib_constexpr_utility                    __cccl_lib_constexpr_utility
// # define __cpp_lib_constexpr_vector                     __cccl_lib_constexpr_vector
// # define __cpp_lib_coroutine                            __cccl_lib_coroutine
# ifdef __cccl_lib_destroying_delete
#   define __cpp_lib_destroying_delete                  __cccl_lib_destroying_delete
# endif
// # define __cpp_lib_endian                               __cccl_lib_endian
# define __cpp_lib_erase_if                             201811L
// # undef  __cpp_lib_execution
// # define __cpp_lib_execution                            __cccl_lib_execution
# ifdef __cccl_lib_format
// #   define __cpp_lib_format                             __cccl_lib_format
# endif
// # define __cpp_lib_generic_unordered_lookup             __cccl_lib_generic_unordered_lookup
// # define __cpp_lib_int_pow2                             202002L
# define __cpp_lib_integer_comparison_functions         202002L
# define __cpp_lib_interpolate                          201902L
# ifdef __cccl_lib_is_constant_evaluated
#   define __cpp_lib_is_constant_evaluated              __cccl_lib_is_constant_evaluated
# endif
// # define __cpp_lib_is_layout_compatible                 __cccl_lib_is_layout_compatible
# define __cpp_lib_is_nothrow_convertible               __cccl_lib_is_nothrow_convertible
// # define __cpp_lib_is_pointer_interconvertible          __cccl_lib_is_pointer_interconvertible
# ifdef __cccl_lib_jthread
#   define __cpp_lib_jthread                            __cccl_lib_jthread
# endif
# ifdef __cccl_lib_latch
#   define __cpp_lib_latch                              __cccl_lib_latch
# endif
// # define __cpp_lib_list_remove_return_type              __cccl_lib_list_remove_return_type
// # define __cpp_lib_math_constants                       __cccl_lib_math_constants
// # define __cpp_lib_polymorphic_allocator                __cccl_lib_polymorphic_allocator
// # define __cpp_lib_ranges                               __cccl_lib_ranges
// # define __cpp_lib_remove_cvref                         __cccl_lib_remove_cvref
# ifdef __cccl_lib_semaphore
#   define __cpp_lib_semaphore                          __cccl_lib_semaphore
# endif
// # undef  __cpp_lib_shared_ptr_arrays
// # define __cpp_lib_shared_ptr_arrays                    __cccl_lib_shared_ptr_arrays
// # define __cpp_lib_shift                                __cccl_lib_shift
// # define __cpp_lib_smart_ptr_for_overwrite              __cccl_lib_smart_ptr_for_overwrite
// # define __cpp_lib_source_location                      __cccl_lib_source_location
// # define __cpp_lib_ssize                                __cccl_lib_ssize
// # define __cpp_lib_starts_ends_with                     __cccl_lib_starts_ends_with
// # undef  __cpp_lib_string_view
// # define __cpp_lib_string_view                          __cccl_lib_string_view
// # define __cpp_lib_syncbuf                              __cccl_lib_syncbuf
// # define __cpp_lib_three_way_comparison                 __cccl_lib_three_way_comparison
// # define __cpp_lib_to_address                           __cccl_lib_to_address
// # define __cpp_lib_to_array                             __cccl_lib_to_array
// # define __cpp_lib_type_identity                        __cccl_lib_type_identity
# define __cpp_lib_unwrap_ref                           __cccl_lib_unwrap_ref
#endif // _LIBCUDACXX_STD_VER > 17

#if _LIBCUDACXX_STD_VER > 20
// # define __cpp_lib_adaptor_iterator_pair_constructor    __cccl_lib_adaptor_iterator_pair_constructor
// # define __cpp_lib_allocate_at_least                    __cccl_lib_allocate_at_least
// # define __cpp_lib_associative_heterogeneous_erasure    __cccl_lib_associative_heterogeneous_erasure
// # define __cpp_lib_bind_back                            __cccl_lib_bind_back
// # define __cpp_lib_byteswap                             __cccl_lib_byteswap
// # define __cpp_lib_constexpr_bitset                     __cccl_lib_constexpr_bitset
// # define __cpp_lib_constexpr_charconv                   __cccl_lib_constexpr_charconv
// # define __cpp_lib_constexpr_cmath                      __cccl_lib_constexpr_cmath
// # undef  __cpp_lib_constexpr_memory
// # define __cpp_lib_constexpr_memory                     __cccl_lib_constexpr_memory
// # define __cpp_lib_constexpr_typeinfo                   __cccl_lib_constexpr_typeinfo
# define __cpp_lib_forward_like                         __cccl_lib_forward_like
// # define __cpp_lib_invoke_r                             __cccl_lib_invoke_r
# define __cpp_lib_is_scoped_enum                       __cccl_lib_is_scoped_enum
// # define __cpp_lib_move_only_function                   __cccl_lib_move_only_function
// # define __cpp_lib_out_ptr                              __cccl_lib_out_ptr
// # define __cpp_lib_ranges_chunk                         __cccl_lib_ranges_chunk
// # define __cpp_lib_ranges_chunk_by                      __cccl_lib_ranges_chunk_by
// # define __cpp_lib_ranges_iota                          __cccl_lib_ranges_iota
// # define __cpp_lib_ranges_join_with                     __cccl_lib_ranges_join_with
// # define __cpp_lib_ranges_slide                         __cccl_lib_ranges_slide
// # define __cpp_lib_ranges_starts_ends_with              __cccl_lib_ranges_starts_ends_with
// # define __cpp_lib_ranges_to_container                  __cccl_lib_ranges_to_container
// # define __cpp_lib_ranges_zip                           __cccl_lib_ranges_zip
// # define __cpp_lib_reference_from_temporary             __cccl_lib_reference_from_temporary
// # define __cpp_lib_spanstream                           __cccl_lib_spanstream
// # define __cpp_lib_stacktrace                           __cccl_lib_stacktrace
// # define __cpp_lib_stdatomic_h                          __cccl_lib_stdatomic_h
// # define __cpp_lib_string_contains                      __cccl_lib_string_contains
// # define __cpp_lib_string_resize_and_overwrite          __cccl_lib_string_resize_and_overwrite
# define __cpp_lib_to_underlying                        __cccl_lib_to_underlying
# define __cpp_lib_unreachable                          __cccl_lib_unreachable

#endif // _LIBCUDACXX_STD_VER > 20

#endif // !__cuda_std__

#endif // _LIBCUDACXX_VERSIONH
