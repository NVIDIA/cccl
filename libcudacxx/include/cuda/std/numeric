//===----------------------------------------------------------------------===//
//
// Part of libcu++, the C++ Standard Library for your entire system,
// under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
// SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES.
//
//===----------------------------------------------------------------------===//

#ifndef _CUDA_STD_NUMERIC
#define _CUDA_STD_NUMERIC

#include <cuda/std/detail/__config>

#if defined(_CCCL_IMPLICIT_SYSTEM_HEADER_GCC)
#  pragma GCC system_header
#elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_CLANG)
#  pragma clang system_header
#elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_MSVC)
#  pragma system_header
#endif // no system header

#include <cuda/std/__numeric/accumulate.h>
#include <cuda/std/__numeric/adjacent_difference.h>
#include <cuda/std/__numeric/exclusive_scan.h>
#include <cuda/std/__numeric/gcd_lcm.h>
#include <cuda/std/__numeric/inclusive_scan.h>
#include <cuda/std/__numeric/inner_product.h>
#include <cuda/std/__numeric/iota.h>
#include <cuda/std/__numeric/midpoint.h>
#include <cuda/std/__numeric/partial_sum.h>
#include <cuda/std/__numeric/reduce.h>
#include <cuda/std/__numeric/transform_exclusive_scan.h>
#include <cuda/std/__numeric/transform_inclusive_scan.h>
#include <cuda/std/__numeric/transform_reduce.h>
#include <cuda/std/detail/libcxx/include/__assert> // all public C++ headers provide the assertion handler

// standard mandated include
#include <cuda/std/version>

#endif // _CUDA_STD_NUMERIC
