{
  "shutdownAction": "stopContainer",
  "image": "rapidsai/devcontainers:25.10-cpp-gcc12-cuda13.0",
  "hostRequirements": {
    "gpu": "optional"
  },
  "initializeCommand": [
    "/bin/bash",
    "-c",
    "mkdir -m 0755 -p ${localWorkspaceFolder}/.{aws,cache,config}; mkdir -m 0755 -p ${localWorkspaceFolder}/{build,wheelhouse}; if test -z ${localEnv:WSLENV}; then docker volume create --driver local --opt type=none --opt device=${localWorkspaceFolder}/build --opt o=bind cccl-build; docker volume create --driver local --opt type=none --opt device=${localWorkspaceFolder}/wheelhouse --opt o=bind cccl-wheelhouse; else docker volume create cccl-build; docker volume create cccl-wheelhouse; fi;"
  ],
  "postCreateCommand": [
    "/bin/bash",
    "-c",
    "if test -z \"${DISABLE_SCCACHE:+x}\"; then echo \"export SCCACHE_DIST_URL='https://$(dpkg --print-architecture).$(uname -s | tr '[:upper:]' '[:lower:]').sccache.rapids.nvidia.com'\" >> /home/coder/.bashrc; fi"
  ],
  "postAttachCommand": [
    "/bin/bash",
    "-c",
    "if [ ${CODESPACES:-false} = 'true' ]; then . devcontainer-utils-post-attach-command; fi"
  ],
  "containerEnv": {
    "AWS_ROLE_ARN": "arn:aws:iam::279114543810:role/nv-gha-token-sccache-devs",
    "CI": "${localEnv:CI}",
    "DEVCONTAINER_UTILS_ENABLE_SCCACHE_DIST": "true",
    "NVCC_APPEND_FLAGS": "-t=100",
    "SCCACHE_DIST_AUTH_TOKEN_VAR": "${localEnv:SCCACHE_DIST_AUTH_TOKEN_VAR}",
    "SCCACHE_DIST_TOKEN": "${localEnv:SCCACHE_DIST_TOKEN}",
    "SCCACHE_DIST_CONNECT_TIMEOUT": "${localEnv:SCCACHE_DIST_CONNECT_TIMEOUT:30}",
    "SCCACHE_DIST_FALLBACK_TO_LOCAL_COMPILE": "${localEnv:SCCACHE_DIST_FALLBACK_TO_LOCAL_COMPILE:true}",
    "SCCACHE_DIST_KEEPALIVE_ENABLED": "${localEnv:SCCACHE_DIST_KEEPALIVE_ENABLED:true}",
    "SCCACHE_DIST_KEEPALIVE_INTERVAL": "${localEnv:SCCACHE_DIST_KEEPALIVE_INTERVAL:20}",
    "SCCACHE_DIST_KEEPALIVE_TIMEOUT": "${localEnv:SCCACHE_DIST_KEEPALIVE_TIMEOUT:600}",
    "SCCACHE_DIST_MAX_RETRIES": "${localEnv:SCCACHE_DIST_MAX_RETRIES:4}",
    "SCCACHE_DIST_REWRITE_INCLUDES_ONLY": "${localEnv:SCCACHE_DIST_REWRITE_INCLUDES_ONLY:true}",
    "SCCACHE_DIST_REQUEST_TIMEOUT": "${localEnv:SCCACHE_DIST_REQUEST_TIMEOUT:7140}",
    "SCCACHE_IDLE_TIMEOUT": "${localEnv:SCCACHE_IDLE_TIMEOUT:7200}",
    "SCCACHE_SERVER_LOG": "${localEnv:SCCACHE_SERVER_LOG:sccache=debug}",
    "SCCACHE_BUCKET": "rapids-sccache-devs",
    "SCCACHE_REGION": "us-east-2",
    "SCCACHE_S3_KEY_PREFIX": "cccl-test-sccache-dist",
    "HISTFILE": "${containerWorkspaceFolder}/.cache/._bash_history",
    "DEVCONTAINER_NAME": "cuda13.0-gcc12",
    "CCCL_CUDA_VERSION": "13.0",
    "CCCL_HOST_COMPILER": "gcc",
    "CCCL_HOST_COMPILER_VERSION": "12",
    "CCCL_BUILD_INFIX": "cuda13.0-gcc12",
    "CCCL_CUDA_EXTENDED": "false",
    "HOST_WORKSPACE": "${localWorkspaceFolder}"
  },
  "workspaceFolder": "/home/coder/${localWorkspaceFolderBasename}",
  "workspaceMount": "source=${localWorkspaceFolder},target=/home/coder/${localWorkspaceFolderBasename},type=bind,consistency=consistent",
  "mounts": [
    "source=${localWorkspaceFolder}/.aws,target=/home/coder/.aws,type=bind,consistency=consistent",
    "source=${localWorkspaceFolder}/.cache,target=/home/coder/.cache,type=bind,consistency=consistent",
    "source=${localWorkspaceFolder}/.config,target=/home/coder/.config,type=bind,consistency=consistent",
    "source=cccl-build,target=/home/coder/cccl/build",
    "source=cccl-wheelhouse,target=/home/coder/cccl/wheelhouse"
  ],
  "customizations": {
    "vscode": {
      "extensions": [
        "llvm-vs-code-extensions.vscode-clangd",
        "seaube.clangformat",
        "nvidia.nsight-vscode-edition",
        "ms-vscode.cmake-tools"
      ],
      "settings": {
        "editor.defaultFormatter": "seaube.clangformat",
        "editor.formatOnSave": true,
        "clang-format.executable": "/usr/bin/clang-format",
        "clangd.arguments": [
          "--header-insertion=never",
          "--compile-commands-dir=${workspaceFolder}"
        ],
        "files.eol": "\n",
        "files.trimTrailingWhitespace": true
      }
    }
  },
  "name": "cuda13.0-gcc12"
}
