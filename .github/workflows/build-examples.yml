name: Build examples
on:
  workflow_call:
    inputs:
      per_cuda_compiler_matrix: {type: string, required: true}
      devcontainer_version: {type: string, required: true}
      is_windows: {type: boolean, required: true}

jobs:
  # Using a matrix to dispatch to the build-and-test reusable workflow for each build configuration
  # ensures that the build/test steps can overlap across different configurations. For example,
  # the build step for CUDA 12.1 + gcc 9.3 can run at the same time as the test step for CUDA 11.0 + clang 11.
  build_examples:
    name: Build examples
    if: ${{ !inputs.is_windows }}
    uses: ./.github/workflows/run-as-coder.yml
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJSON(inputs.per_cuda_compiler_matrix) }}
    with:
      name: CCCL Examples CUDA${{matrix.cuda}} ${{matrix.compiler.name}}${{matrix.compiler.version}}
      runner: linux-${{matrix.cpu}}-gpu-v100-latest-1
      image: rapidsai/devcontainers:${{inputs.devcontainer_version}}-cpp-${{matrix.compiler.name}}${{matrix.compiler.version}}-cuda${{matrix.cuda}}-${{matrix.os}}
      command: |
        cmake -S . --preset=examples -DCCCL_EXAMPLE_CPM_TAG=${GITHUB_SHA} -DCMAKE_CUDA_COMPILER=nvcc
        ctest --preset=examples