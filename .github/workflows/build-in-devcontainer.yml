on:
  workflow_call:
    inputs:
      sha:
        type: string
      dir:
        type: string
        default: '.devcontainer'
      arch:
        type: string
        default: '["amd64"]'
      cuda:
        type: string
        default: '["12.0"]'
      pkgr:
        type: string
        default: '["conda", "pip"]'
      repo:
        type: string
      node_type:
        type: string
        default: "cpu8"
      build_command:
        type: string
        required: true
      # Note that this is the _name_ of a secret containing the key, not the key itself.
      extra-repo-deploy-key:
        required: false
        type: string
        default: ''
      # Note that this is the _name_ of a secret containing the key, not the key itself.
      extra-repo-deploy-key-2:
        required: false
        type: string
        default: ''

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: write
  issues: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        arch: ${{ fromJSON(inputs.arch) }}
        cuda: ${{ fromJSON(inputs.cuda) }}
        pkgr: ${{ fromJSON(inputs.pkgr) }}
    runs-on: "linux-${{ matrix.arch }}-${{ inputs.node_type }}"
    steps:
      - uses: actions/checkout@v4
        env:
          GIT_TRACE_PACKET: 1
          GIT_TRACE: 1
          GIT_CURL_VERBOSE: 1
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.sha }}
          fetch-depth: 0
      - name: Check if repo has devcontainer
        run: |
          echo "REPOSITORY=$(basename $(pwd))" | tee -a "${GITHUB_ENV}";
          if test -f ${{ inputs.dir }}/cuda${{ matrix.cuda }}-${{ matrix.pkgr }}/devcontainer.json; then
            echo "HAS_DEVCONTAINER=true" >> "${GITHUB_ENV}";
          else
            echo "HAS_DEVCONTAINER=false" >> "${GITHUB_ENV}";
          fi
      - if: ${{ env.HAS_DEVCONTAINER == 'true' }}
        name: Add NVCC problem matcher
        run: |
          echo "::add-matcher::$(pwd)/.github/problem-matchers/problem-matcher.json"
      - if: ${{ env.HAS_DEVCONTAINER == 'true' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::279114543810:role/gha-oidc-NVIDIA
          aws-region: us-east-2
          role-duration-seconds: 43200 # 12h
      - if: ${{ env.HAS_DEVCONTAINER == 'true' }}
        name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      - if: ${{ env.HAS_DEVCONTAINER == 'true' }}
        name: Run build in devcontainer
        uses: devcontainers/ci@v0.3
        with:
          push: never
          configFile: ${{ inputs.dir }}/cuda${{ matrix.cuda }}-${{ matrix.pkgr }}/devcontainer.json
          env: |
            REPOSITORY=${{ env.REPOSITORY }}
            SCCACHE_REGION=us-east-2
            AWS_ACCESS_KEY_ID=${{ env.AWS_ACCESS_KEY_ID }}
            AWS_SESSION_TOKEN=${{ env.AWS_SESSION_TOKEN }}
            AWS_SECRET_ACCESS_KEY=${{ env.AWS_SECRET_ACCESS_KEY }}
          runCmd: |
            set -e;
            mkdir -p ~/.config/pip/;
            cat <<EOF >> ~/.config/pip/pip.conf
            [global]
            extra-index-url = https://pypi.anaconda.org/rapidsai-wheels-nightly/simple
            EOF

            rapids-make-${PYTHON_PACKAGE_MANAGER}-env;

            if test -n '${{ inputs.extra-repo-deploy-key }}' \
            || test -n '${{ inputs.extra-repo-deploy-key-2 }}'; then
              if ! pgrep ssh-agent >/dev/null 2>&1; then eval "$(ssh-agent -s)"; fi;
              if test -n '${{ inputs.extra-repo-deploy-key }}'; then
                ssh-add - <<< '${{ secrets[inputs.extra-repo-deploy-key] }}';
              fi
              if test -n '${{ inputs.extra-repo-deploy-key-2 }}'; then
                ssh-add - <<< '${{ secrets[inputs.extra-repo-deploy-key-2] }}';
              fi
              devcontainer-utils-init-ssh-deploy-keys || true;
            fi

            cd ~/"${REPOSITORY}";
            ${{ inputs.build_command }}
