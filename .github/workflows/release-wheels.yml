# SPDX-FileCopyrightText: Copyright (c) 2025, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Release: Upload Wheels to PyPi"
description: "Manually triggered release workflow for wheels build and upload."

on:
  workflow_dispatch:
    inputs:
      component:
        description: "Component to release"
        required: true
        type: choice
        options:
          - parallel
          - cooperative
          - cccl
          - all
      run-id:
        description: "The GHA run ID that generated validated artifacts"
        required: true
        type: string
      wheel-dst:
        description: "Which wheel index to publish to?"
        required: true
        type: choice
        options:
          - testpypi
          - pypi

defaults:
  run:
    shell: bash --noprofile --norc -xeuo pipefail {0}

jobs:
  publish-wheels:
    name: Publish wheels
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.wheel-dst }}
      url: https://${{ (inputs.wheel-dst == 'testpypi' && 'test.') || '' }}pypi.org/p/${{ inputs.component }}/
    permissions:
      id-token: write
    steps:
      - name: Download component wheels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RUN_ID: ${{ inputs.run-id }}
          COMPONENT: ${{ inputs.component }}
        run: |
          comp=${COMPONENT}
          if [[ "${comp}" == "all" ]]; then
            comp=""
          fi
          gh run download ${RUN_ID} -D dl -p "*${comp}*" -R ${{ github.repository }}
          mkdir dist

          # This can be simplified in the future but a little special treatment is needed for now.
          if [[ "${COMPONENT}" == "parallel" ]]; then
            mv dl/*/*${COMPONENT}*.whl dist/
          elif [[ "${COMPONENT}" == "cooperative" || "${COMPONENT}" == "cccl" ]]; then
            # We build multiple copies right now so squash them into a single file.
            mv --backup=numbered dl/*/*${COMPONENT}*.whl dist/
            rm -f dist/*~
          elif [[ "${COMPONENT}" == "all" ]]; then
            # FIXME: Once we only have one cuda_cccl/cuda_cooperative wheel build this can go away, squashes into one
            # and discards the others for now (labeled as backups).
            mv --backup=numbered dl/*/*.whl dist/
            rm -f dist/*~
          fi

          rm -rf dl
          ls -lh dist/

      - name: Publish package distributions to PyPI
        if: ${{ inputs.wheel-dst == 'pypi' }}
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # v1.12.4

      - name: Publish package distributions to TestPyPI
        if: ${{ inputs.wheel-dst == 'testpypi' }}
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc  # v1.12.4
        with:
          repository-url: https://test.pypi.org/legacy/
