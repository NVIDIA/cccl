name: Deploy CCCL pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v3

      # Build top level docs for CCCL
      - name: Build helper image
        run: ./docs/make_env.sh "cccl:docs"

      - name: Build landing page
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./docs/jekyll
          destination: ./_site

      # Libcudacxx
      - name: Build libcudacxx docs
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./libcudacxx/docs
          destination: ./_site/libcudacxx

      # Thrust
      - name: Build Thrust markdown in Docker
        run: ./docs/build_docs.sh "cccl:docs" /cccl/thrust/docs/build_docs_locally.bash

      - name: Build Thrust docs
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./thrust/build_docs/github_pages
          destination: ./_site/thrust

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
