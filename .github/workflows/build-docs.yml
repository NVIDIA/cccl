name: Deploy CCCL pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Reusable workflow for PR previews
  # NOTE: For fork testing, ensure GitHub Pages is enabled in repository settings
  # and set to deploy from "gh-pages" branch
  workflow_call:
    inputs:
      destination_dir:
        description: "Destination directory for deployment"
        required: false
        default: "docs"
        type: string
      pr_number:
        description: "PR number for preview URL generation"
        required: false
        default: ""
        type: string
      remove_pr_preview:
        description: "If true, deploy empty folder to remove PR preview"
        required: false
        default: false
        type: boolean

# Sets permissions of the GITHUB_TOKEN to allow pushing to gh-pages branch and PR comments
permissions:
  contents: write
  pull-requests: write

# Allow only one concurrent deployment per destination, but allow PR previews to run in parallel
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: ${{ inputs.remove_pr_preview && 'cleanup' || 'pages' }}-${{ inputs.destination_dir }}
  cancel-in-progress: false

jobs:
  # Build and deploy job
  build-and-deploy:
    runs-on: linux-amd64-cpu32
    steps:
      - name: Validate inputs and show deployment info
        run: |
          echo "=== Deployment Configuration ==="
          echo "Repository: ${{ github.repository }}"
          echo "Repository Owner: ${{ github.repository_owner }}"
          echo "Repository Name: ${{ github.event.repository.name }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Destination: ${{ inputs.destination_dir }}"
          echo "PR Number: ${{ inputs.pr_number }}"
          echo "Remove Preview: ${{ inputs.remove_pr_preview }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "================================"

          if [ "${{ inputs.remove_pr_preview }}" = "true" ] && [ -z "${{ inputs.pr_number }}" ]; then
            echo "Error: remove_pr_preview requires pr_number to be set"
            exit 1
          fi
          if [ -n "${{ inputs.pr_number }}" ] && ! echo "${{ inputs.pr_number }}" | grep -qE '^[0-9]+$'; then
            echo "Error: pr_number must be numeric (got: '${{ inputs.pr_number }}')"
            exit 1
          fi

          # Show final GitHub Pages URL for testing
          if [ -n "${{ inputs.pr_number }}" ]; then
            echo "ðŸ“– Expected Preview URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ inputs.destination_dir }}/"
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Build docs
        if: ${{ !inputs.remove_pr_preview }}
        uses: ./.github/actions/docs-build
        with:
          upload_workflow_artifact: "true"
          upload_pages_artifact: "false"

      - name: Create empty directory for cleanup
        if: ${{ inputs.remove_pr_preview }}
        run: |
          mkdir -p _site
          echo "# Preview Removed" > _site/README.md
          echo "This PR preview has been removed because the pull request was closed." >> _site/README.md

      - name: Set commit message
        id: commit-msg
        run: |
          if [ "${{ inputs.remove_pr_preview }}" = "true" ]; then
            echo "message=Clean up doc preview for PR ${{ inputs.pr_number }} (${{ github.sha }})" >> $GITHUB_OUTPUT
          elif [ -n "${{ inputs.pr_number }}" ]; then
            echo "message=Deploy doc preview for PR ${{ inputs.pr_number }} (${{ github.sha }})" >> $GITHUB_OUTPUT
          else
            echo "message=Deploy main docs (${{ github.sha }})" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.FORK_DEPLOY_TOKEN || secrets.GITHUB_TOKEN }}
          publish_dir: ./_site
          publish_branch: gh-pages
          destination_dir: ${{ inputs.destination_dir }}
          keep_files: true
          commit_message: ${{ steps.commit-msg.outputs.message }}

      - name: Leave PR preview comment
        if: ${{ inputs.pr_number && !inputs.remove_pr_preview }}
        uses: marocchino/sticky-pull-request-comment@67d0dec7b07ed060a405f9b2a64b8ab319fdd7db  # v2.9.2
        with:
          header: pr-preview
          number: ${{ inputs.pr_number }}
          skip_unchanged: true
          GITHUB_TOKEN: ${{ secrets.FORK_DEPLOY_TOKEN || secrets.GITHUB_TOKEN }}
          message: |
            ## ðŸ“– Doc Preview CI

            ðŸš€ **Preview URL:** [https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ inputs.destination_dir }}/](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ inputs.destination_dir }}/)

            > **Note:** Preview will be ready when the GitHub Pages deployment is complete.

      - name: Leave cleanup comment
        if: ${{ inputs.pr_number && inputs.remove_pr_preview }}
        uses: marocchino/sticky-pull-request-comment@67d0dec7b07ed060a405f9b2a64b8ab319fdd7db  # v2.9.2
        with:
          header: pr-preview
          number: ${{ inputs.pr_number }}
          hide_and_recreate: true
          hide_classify: "OUTDATED"
          GITHUB_TOKEN: ${{ secrets.FORK_DEPLOY_TOKEN || secrets.GITHUB_TOKEN }}
          message: |
            ## ðŸ“– Doc Preview CI

            Preview removed because the pull request was closed.
